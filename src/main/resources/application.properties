#spring.profiles.active=dev

spring.application.name=swapi-data-report-service
server.port=8200
#api.offline.enabled=true;
#Eureka properties
#eureka.client.service-url.default-zone=http://localhost:8761/eureka


springdoc.show-actuator=true
springdoc.api-docs.path=/api-docs

swapi.url=https://swapi.dev/api/

swapi.url.people=https://swapi.dev/api/people/
swapi.url.peopleType=people

swapi.url.planets=https://swapi.dev/api/planets/
swapi.url.planetsType=planets

swapi.url.films=https://swapi.dev/api/films/
swapi.url.filmsType=films



swapi.url.species=https://swapi.dev/api/species/
swapi.url.speciesType=species

swapi.url.vehicles=https://swapi.dev/api/vehicles/
swapi.url.vehiclesType=vehicles

swapi.url.starships=https://swapi.dev/api/starships/
swapi.url.starshipsType=starships


#Swagger enable with OAuth
security.basic.enabled=false
server.forward-headers-strategy=framework

##OAUTH
#swapi.oauth.user=pavan
#swapi.oauth.secret=pavan

swapi.jwt.user=pavan
swapi.jwt.secret=password
swapi.jwt.encoded.secret=$2a$10$slYQmyNdGzTn7ZLBXBChFOC9f6kFjAqPhccnP6DxlWXx2lPk1C3G6
swapi.jwt.get.token.uri=/authenticate


#kafka for offline mode
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

#Kafka
kafka.bootstrapAddress=localhost:9092 
#set this to your kafka bootstrap server
kafka.groupId=spring-boot-api-consumer
kafka.jaas=org.apache.kafka.common.security.plain.PlainLoginModule required username='' password='; # Set this if you are using authentication

api.offline.enabled=false